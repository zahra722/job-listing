{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sayed\\\\Downloads\\\\job-listing-react-master\\\\job-listing-react-master\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Button, CircularProgress, Grid, ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./theme/theme\";\nimport Header from \"./components/Header\";\nimport SearchBar from \"./components/SearchBar\";\nimport JobCart from \"./components/Job/JobCart\";\nimport NewJobMod from \"./components/Job/NewJobMod\";\nimport { firestore, app } from './firebase/config';\nimport { Close as CloseIcon } from '@material-ui/icons';\nexport default (() => {\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [customSearch, setCustomSearch] = useState(false);\n  const [newJobModal, setNewJobModal] = useState(false);\n\n  const fetchJobs = async () => {\n    setLoading(true);\n    const req = await firestore.collection('jobs').orderBy('postedOn', 'desc').get();\n    const tempJobs = req.docs.map(job => ({ ...job.data(),\n      id: job.id,\n      postedOn: job.data().postedOn.toDate()\n    }));\n    setJobs(tempJobs);\n    setLoading(false);\n  };\n\n  const fetchJobsCustom = async jobSearch => {\n    setLoading(true);\n    setCustomSearch(true);\n    const req = await firestore.collection('jobs').orderBy('postedOn', 'desc').where(\"location\", \"==\", jobSearch.location).where(\"type\", \"==\", jobSearch.type).get();\n    const tempJobs = req.docs.map(job => ({ ...job.data(),\n      id: job.id,\n      postedOn: job.data().postedOn.toDate()\n    }));\n    setJobs(tempJobs);\n    setLoading(false);\n  };\n\n  const postJob = async jobDetails => {\n    await firestore.collection('jobs').add({ ...jobDetails,\n      postedOn: app.firestore.FieldValue.serverTimestamp()\n    });\n    fetchJobs();\n  };\n\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    openNewJobModal: () => setNewJobModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(NewJobMod, {\n    closeModal: () => setNewJobModal(false),\n    newJobModal: newJobModal,\n    postJob: postJob,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    mr: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    fetchJobsCustom: fetchJobsCustom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, customSearch && /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), \"Custom Search\")), jobs.map(job => /*#__PURE__*/React.createElement(JobCart, Object.assign({\n    key: job.id\n  }, job, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }))))))));\n});","map":{"version":3,"sources":["C:/Users/sayed/Downloads/job-listing-react-master/job-listing-react-master/src/App.js"],"names":["React","useState","useEffect","Box","Button","CircularProgress","Grid","ThemeProvider","theme","Header","SearchBar","JobCart","NewJobMod","firestore","app","Close","CloseIcon","jobs","setJobs","loading","setLoading","customSearch","setCustomSearch","newJobModal","setNewJobModal","fetchJobs","req","collection","orderBy","get","tempJobs","docs","map","job","data","id","postedOn","toDate","fetchJobsCustom","jobSearch","where","location","type","postJob","jobDetails","add","FieldValue","serverTimestamp"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport { Box, Button, CircularProgress, Grid, ThemeProvider} from \"@material-ui/core\";\nimport theme from \"./theme/theme\";\nimport Header from \"./components/Header\";\nimport SearchBar from \"./components/SearchBar\";\nimport JobCart from \"./components/Job/JobCart\";\nimport NewJobMod from \"./components/Job/NewJobMod\";\nimport {firestore,app} from './firebase/config'\nimport {Close as CloseIcon} from '@material-ui/icons'\n\nexport default () => {\nconst [jobs, setJobs]= useState([]);\nconst [loading,setLoading] = useState(true);\nconst [customSearch,setCustomSearch] = useState(false);\nconst [newJobModal,setNewJobModal] = useState(false)\n\nconst fetchJobs = async() =>{\n  setLoading(true);\n  const req = await firestore.collection('jobs').orderBy('postedOn','desc').get();\n const tempJobs = req.docs.map((job) => ({...job.data(), id:job.id,postedOn:job.data().postedOn.toDate(),}));\n setJobs(tempJobs);\n setLoading(false);\n};\nconst fetchJobsCustom = async jobSearch =>{\n  setLoading(true);\n  setCustomSearch(true);\n  const req = await firestore.collection('jobs').orderBy('postedOn','desc')\n  .where(\"location\",\"==\",jobSearch.location)\n  .where(\"type\",\"==\",jobSearch.type)\n  .get();\n const tempJobs = req.docs.map((job) => ({...job.data(), id:job.id,postedOn:job.data().postedOn.toDate(),}));\n setJobs(tempJobs);\n setLoading(false);\n\n}\n\nconst postJob = async jobDetails =>{\n  await firestore.collection('jobs').add({\n    ...jobDetails,\n    postedOn: app.firestore.FieldValue.serverTimestamp()\n  });\n  fetchJobs();\n}\n\nuseEffect(()=>{\n  fetchJobs();\n},[]);\n  return <ThemeProvider theme={theme}>\n    <Header openNewJobModal={() =>setNewJobModal(true)}/>\n    <NewJobMod closeModal={() =>setNewJobModal(false)} newJobModal={newJobModal} postJob={postJob}/>\n    <Box mr={3}>\n    <Grid container justify=\"center\">\n      <Grid item xs={10}>\n        <SearchBar fetchJobsCustom={fetchJobsCustom}/>\n        {loading ?( \n          <Box display='flex' justifyContent='center'>\n            <CircularProgress/>\n            </Box>\n        ):(\n         <>\n         {customSearch && (\n            <Box display=\"flex\" justifyContent=\"flex-end\">\n              <Button>\n                <CloseIcon size={20}/>\n                Custom Search \n              </Button>\n            </Box>\n            )}\n            {jobs.map((job)=>(\n            <JobCart key={job.id}{...job}/>\n            ))}\n            </>\n        )}\n      </Grid>\n    </Grid>\n    </Box>\n  </ThemeProvider>\n};\n"]},"metadata":{},"sourceType":"module"}
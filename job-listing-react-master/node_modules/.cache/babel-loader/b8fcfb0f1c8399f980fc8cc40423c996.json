{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sayed\\\\Downloads\\\\job-listing-react-master\\\\job-listing-react-master\\\\src\\\\components\\\\Job\\\\ViewJobModal.js\";\nimport React from 'react';\nimport { Box, Grid, FilledInput, Select, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Typography, makeStyles, Button, IconButton, CircularProgress } from '@material-ui/core';\nimport { Close as CloseIcon } from '@material-ui/icons';\nimport { format } from 'date-fns';\nconst useStyles = makeStyles(theme => ({\n  info: {\n    '& > *': {\n      margin: '4px'\n    }\n  },\n  skillChip: {\n    margin: theme.spacing(0.5),\n    padding: theme.spacing(0.75),\n    fontSize: \"14.5px\",\n    borderRadius: \"5px\",\n    transition: \".3s\",\n    fontWeight: 600,\n    backgroundColor: theme.palette.secondary.main,\n    color: '#fff'\n  }\n}));\nexport default (props => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: !!Object.keys(props.job).length,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, props.job.title, \" as \", props.job.companyName, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: props.closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.info,\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"Posted on\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, props.job.postedOn && format(props.job.postedOn, \"dd/MMM/yyyy  HH:MM\"))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.info,\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, \"job type:\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, props.job.type)), /*#__PURE__*/React.createElement(Box, {\n    className: classes.info,\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, \"job location\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, props.job.location)), /*#__PURE__*/React.createElement(Box, {\n    className: classes.info,\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"job description\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, props.job.description)), /*#__PURE__*/React.createElement(Box, {\n    className: classes.info,\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"Job-Title\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, props.job.companyName, \" \")), /*#__PURE__*/React.createElement(Box, {\n    className: classes.info,\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, props.job.companyUrl)), /*#__PURE__*/React.createElement(Box, {\n    mr: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"skills\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, props.job.skills && props.job.skills.map(skill => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: skill,\n    className: classes.skillChip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, skill)))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    component: \"a\",\n    href: props.job.link,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Apply\")));\n});","map":{"version":3,"sources":["C:/Users/sayed/Downloads/job-listing-react-master/job-listing-react-master/src/components/Job/ViewJobModal.js"],"names":["React","Box","Grid","FilledInput","Select","MenuItem","Dialog","DialogTitle","DialogContent","DialogActions","Typography","makeStyles","Button","IconButton","CircularProgress","Close","CloseIcon","format","useStyles","theme","info","margin","skillChip","spacing","padding","fontSize","borderRadius","transition","fontWeight","backgroundColor","palette","secondary","main","color","props","classes","Object","keys","job","length","title","companyName","closeModal","postedOn","type","location","description","companyUrl","skills","map","skill","link"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Box,Grid,FilledInput,Select,MenuItem,Dialog,DialogTitle,DialogContent,DialogActions, Typography,makeStyles, Button,IconButton, CircularProgress} from '@material-ui/core'\r\nimport {Close as CloseIcon} from '@material-ui/icons'\r\nimport {format} from 'date-fns';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n    info:{\r\n        '& > *':{\r\n            margin:'4px',\r\n    },\r\n},\r\nskillChip:{\r\n    margin:theme.spacing(0.5),\r\n    padding:theme.spacing(0.75),\r\n    fontSize:\"14.5px\",\r\n    borderRadius:\"5px\",\r\n    transition: \".3s\",\r\n    fontWeight:600,\r\n    backgroundColor:theme.palette.secondary.main,\r\n    color:'#fff',\r\n}\r\n\r\n}));\r\n\r\nexport default (props) =>{\r\n    const classes = useStyles()\r\n    return (\r\n    <Dialog open={!!Object.keys(props.job).length} fullWidth>\r\n        <DialogTitle>\r\n                <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                    {props.job.title} as {props.job.companyName}\r\n                    <IconButton onClick={props.closeModal}>\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                </Box>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Box>\r\n                    <Box className={classes.info} display=\"flex\">\r\n                        <Typography variant=\"caption\">Posted on</Typography>\r\n                        <Typography variant=\"body2\">\r\n                            {props.job.postedOn && format(props.job.postedOn ,\"dd/MMM/yyyy  HH:MM\")}\r\n                            </Typography>\r\n\r\n                    </Box>\r\n                    <Box className={classes.info} display=\"flex\">\r\n                        <Typography variant=\"caption\">job type:</Typography>\r\n                        <Typography variant=\"body2\">{props.job.type}</Typography>\r\n                    </Box>\r\n                    <Box className={classes.info} display=\"flex\">\r\n                        <Typography variant=\"caption\">job location</Typography>\r\n                        <Typography variant=\"body2\">{props.job.location}</Typography>\r\n                    </Box>\r\n                    <Box className={classes.info} display=\"flex\">\r\n                        <Typography variant=\"caption\">job description</Typography>\r\n                        <Typography variant=\"body2\">{props.job.description}</Typography>\r\n                    </Box>\r\n                    <Box className={classes.info} display=\"flex\">\r\n                        <Typography variant=\"caption\">Job-Title</Typography>\r\n                        <Typography variant=\"body2\">{props.job.companyName} </Typography>\r\n                    </Box>\r\n                    <Box className={classes.info} display=\"flex\">\r\n                        <Typography variant=\"caption\">Location</Typography>\r\n                        <Typography variant=\"body2\">{props.job.companyUrl}</Typography>\r\n                    </Box>\r\n                    <Box mr={4}>\r\n                        <Typography variant=\"caption\">skills</Typography>\r\n                        <Grid container alignItems='center'>\r\n                        {props.job.skills &&\r\n                        props.job.skills.map((skill) =>(\r\n                            <Grid item key={skill} className={classes.skillChip}>\r\n                                {skill}\r\n                            </Grid>\r\n                        ))\r\n                        }\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button variant=\"outlined\" component=\"a\" href={props.job.link} target =\"_blank\">Apply</Button>\r\n            </DialogActions>\r\n    </Dialog>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}